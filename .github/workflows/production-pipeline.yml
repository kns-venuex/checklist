on: workflow_dispatch

name: Release to production

jobs:
  prod_release:
    if: contains('["cantecim","cagdasakar"]', github.actor)
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      - name: echo
        run: echo ${{ github.sha }}

      - name: Checkout
        uses: actions/checkout@v2

      - name: Cleanup the runner
        run: |
          # disable swaps to reduce disk space usage
          sudo swapoff -a
          # remove existing swap file
          sudo rm -f /swapfile
          # clean apt caches
          sudo apt clean
          # remove redundant images
          docker image prune -af
          # human readable diskspace
          df -h

      #      - name: Docker Layer Caching
      #        uses: satackey/action-docker-layer-caching@v0.0.11
      #        continue-on-error: true

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, Tag, and Push to Amazon ECR
        id: build-images
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_CHECKLIST_REPOSITORY: venuex/checklist
          IMAGE_TAG: ${{ github.sha }}
          NODE_ENV: production
        run: |
          # Build venuex/checklist image
          docker build -t venuex/checklist:latest --build-arg NODE_ENV .
          docker tag venuex/checklist:latest $ECR_REGISTRY/$ECR_CHECKLIST_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=checklist_image::$ECR_REGISTRY/$ECR_CHECKLIST_REPOSITORY:$IMAGE_TAG"

          # Tag as latest and push
          docker tag venuex/checklist:latest $ECR_REGISTRY/$ECR_CHECKLIST_REPOSITORY:latest

          echo "::push $ECR_REGISTRY/$ECR_CHECKLIST_REPOSITORY:latest"
          docker push $ECR_REGISTRY/$ECR_CHECKLIST_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_CHECKLIST_REPOSITORY:$IMAGE_TAG
      - name: Download task definitions
        run: |
          aws ecs describe-task-definition --task-definition checklist --query taskDefinition > checklist.task-definition.json
      - name: Fill in the new image for venuex-checklist
        id: task-def-venuex-checklist
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: checklist.task-definition.json
          container-name: checklist
          image: ${{ steps.build-images.outputs.checklist_image }}

      - name: Deploy checklist to ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def-venuex-checklist.outputs.task-definition }}
          service: checklist
          cluster: venuex
